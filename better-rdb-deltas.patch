--- R-4.2.1/src/library/base/R/serialize.R~	2020-03-26 23:02:08.000000000 +0000
+++ R-4.2.1/src/library/base/R/serialize.R	2022-08-24 13:59:39.629551972 +0000
@@ -18,7 +18,7 @@
 
 saveRDS <-
     function(object, file = "", ascii = FALSE, version = NULL,
-             compress = TRUE, refhook = NULL)
+             compress = FALSE, refhook = NULL)
 {
     if(is.character(file)) {
 	if(file == "") stop("'file' must be non-empty string")
--- R-4.2.1/src/library/tools/R/Rd.R~	2022-03-24 23:02:04.000000000 +0000
+++ R-4.2.1/src/library/tools/R/Rd.R	2022-08-24 14:01:40.126440210 +0000
@@ -117,7 +117,7 @@
     ## <NOTE>
     ## To deal with possible changes in the format of the contents db
     ## in the future, use a version attribute and/or a formal class.
-    saveRDS(contents, file = outFile, compress = TRUE)
+    saveRDS(contents, file = outFile, compress = FALSE)
     ## </NOTE>
 }
 
--- R-4.2.1/src/library/tools/R/packages.R~	2022-04-26 22:15:01.000000000 +0000
+++ R-4.2.1/src/library/tools/R/packages.R	2022-08-24 14:03:07.552084512 +0000
@@ -81,7 +81,7 @@
        write.dcf(db, con)
        close(con)
        rownames(db) <- db[, "Package"]
-       saveRDS(db, file.path(dir, "PACKAGES.rds"), compress = rds_compress)
+       saveRDS(db, file.path(dir, "PACKAGES.rds"), compress = FALSE)
    }
 
    invisible(np)
--- R-4.2.1/src/library/base/R/serialize.R~	2022-08-24 13:59:39.000000000 +0000
+++ R-4.2.1/src/library/base/R/serialize.R	2022-08-24 15:59:11.387146901 +0000
@@ -24,14 +24,7 @@
 	if(file == "") stop("'file' must be non-empty string")
 	object <- object # do not create corrupt file if object does not exist
 	mode <- if(ascii %in% FALSE) "wb" else "w"
-	con <- if (is.logical(compress))
-		   if(compress) gzfile(file, mode) else file(file, mode)
-	       else
-		   switch(compress,
-			  "bzip2" = bzfile(file, mode),
-			  "xz"    = xzfile(file, mode),
-			  "gzip"  = gzfile(file, mode),
-			  stop("invalid 'compress' argument: ", compress))
+	con <- file(file, mode)
         on.exit(close(con))
     }
     else if(inherits(file, "connection")) {
--- R-4.2.1/src/library/tools/R/install.R~	2022-05-01 22:15:01.000000000 +0000
+++ R-4.2.1/src/library/tools/R/install.R	2022-08-24 19:08:51.799384103 +0000
@@ -1544,7 +1544,7 @@
                                                 ## perhaps error?
                                                 TRUE)  # default to gzip
 		    res <- try(data2LazyLoadDB(pkg_name, lib,
-					       compress = data_compress))
+					       compress = FALSE))
 		    if (inherits(res, "try-error"))
 			pkgerrmsg("lazydata failed", pkg_name)
 		}
--- R-4.2.1/src/library/base/makebasedb.R~	2022-03-24 23:02:03.000000000 +0000
+++ R-4.2.1/src/library/base/makebasedb.R	2022-08-24 19:10:16.089015999 +0000
@@ -17,7 +17,7 @@
 #  https://www.R-project.org/Licenses/
 
 local({
-    makeLazyLoadDB <- function(from, filebase, compress = TRUE, ascii = FALSE,
+    makeLazyLoadDB <- function(from, filebase, compress = FALSE, ascii = FALSE,
                                variables) {
 
         envlist <- function(e)
--- R-4.2.1/src/library/tools/R/install.R~	2022-08-24 19:08:51.000000000 +0000
+++ R-4.2.1/src/library/tools/R/install.R	2022-08-24 20:30:39.236943291 +0000
@@ -1458,7 +1458,7 @@
                                    "gzip" = TRUE,
                                    "bzip2" = 2L,
                                    "xz" = 3L,
-                                   TRUE)  # default to gzip
+                                   FALSE)  # default to gzip
                 } else if(file.size(f) > 1e6) comp <- 3L # "xz"
 		res <- try(sysdata2LazyLoadDB(f, file.path(instdir, "R"),
                                               compress = comp))
@@ -1542,7 +1542,7 @@
                                                 "bzip2" = 2L,
                                                 "xz" = 3L,
                                                 ## perhaps error?
-                                                TRUE)  # default to gzip
+                                                FALSE)  # default to gzip
 		    res <- try(data2LazyLoadDB(pkg_name, lib,
 					       compress = FALSE))
 		    if (inherits(res, "try-error"))
@@ -1946,7 +1946,7 @@
     merge <- FALSE
     dsym <- nzchar(Sys.getenv("PKG_MAKE_DSYM"))
     get_user_libPaths <- FALSE
-    data_compress <- TRUE # FALSE (none), TRUE (gzip), 2 (bzip2), 3 (xz)
+    data_compress <- FALSE # FALSE (none), TRUE (gzip), 2 (bzip2), 3 (xz)
     resave_data <- FALSE
     compact_docs <- FALSE
     keep.source <- getOption("keep.source.pkgs")
--- R-4.2.1/src/library/tools/R/makeLazyLoad.R~	2022-06-10 22:15:01.000000000 +0000
+++ R-4.2.1/src/library/tools/R/makeLazyLoad.R	2022-08-25 15:49:10.525442091 +0000
@@ -20,7 +20,7 @@
     function(package, lib.loc = NULL,
              keep.source = getOption("keep.source.pkgs"),
              keep.parse.data = getOption("keep.parse.data.pkgs"),
-             compress = TRUE, set.install.dir = NULL)
+             compress = FALSE, set.install.dir = NULL)
 {
     pkgpath <- find.package(package, lib.loc, quiet = TRUE)
     if(!length(pkgpath))
@@ -33,18 +33,18 @@
                   package = package, lib.loc = lib.loc,
                   keep.source = keep.source, keep.parse.data = keep.parse.data,
                   partial = TRUE))
-        makeLazyLoadDB(ns, dbbase, compress = compress,
+        makeLazyLoadDB(ns, dbbase, compress = FALSE,
                        set.install.dir = set.install.dir)
     }
     else
         stop("all packages should have a NAMESPACE")
 }
 
-sysdata2LazyLoadDB <- function(srcFile, destDir, compress = TRUE)
+sysdata2LazyLoadDB <- function(srcFile, destDir, compress = FALSE)
 {
     e <- new.env(hash=TRUE)
     load(srcFile, e)
-    makeLazyLoadDB(e, file.path(destDir, "sysdata"), compress = compress)
+    makeLazyLoadDB(e, file.path(destDir, "sysdata"), compress = FALSE)
 }
 
 list_data_in_pkg <-
@@ -101,7 +101,7 @@
     } else NULL
 }
 
-data2LazyLoadDB <- function(package, lib.loc = NULL, compress = TRUE)
+data2LazyLoadDB <- function(package, lib.loc = NULL, compress = FALSE)
 {
     options(warn=1)
     pkgpath <- find.package(package, lib.loc, quiet = TRUE)
@@ -149,9 +149,9 @@
 
             if(length(loaded)) {
                 dbbase <- file.path(dataDir, "Rdata")
-                makeLazyLoadDB(dataEnv, dbbase, compress = compress)
+                makeLazyLoadDB(dataEnv, dbbase, compress = FALSE)
                 saveRDS(dlist, file.path(dataDir, "Rdata.rds"),
-                         compress = compress)
+                         compress = FALSE)
                 unlink(f0)
                 if(file.exists(file.path(dataDir, "filelist")))
                     unlink(file.path(dataDir, c("filelist", "Rdata.zip")))
@@ -160,7 +160,7 @@
     }
 }
 
-makeLazyLoadDB <- function(from, filebase, compress = TRUE, ascii = FALSE,
+makeLazyLoadDB <- function(from, filebase, compress = FALSE, ascii = FALSE,
                            variables, set.install.dir = NULL)
 {
     ## pre-empt any problems with interpretation of 'ascii'
@@ -168,6 +168,8 @@
     if (is.na(ascii)) stop("'ascii' must be TRUE or FALSE", domain = NA)
     ascii <- as.integer(ascii)
 
+    compress = FALSE
+
     envlist <- function(e)
         .Internal(getVarsFromFrame(ls(e, all.names = TRUE), e, FALSE))
 
@@ -330,7 +332,7 @@
 }
 
 makeLazyLoading <-
-    function(package, lib.loc = NULL, compress = TRUE,
+    function(package, lib.loc = NULL, compress = FALSE,
              keep.source = getOption("keep.source.pkgs"),
              keep.parse.data = getOption("keep.parse.data.pkgs"),
              set.install.dir = NULL)
@@ -363,7 +365,7 @@
         code2LazyLoadDB(package, lib.loc = lib.loc,
                         keep.source = keep.source,
                         keep.parse.data = keep.parse.data,
-                        compress = compress,
+                        compress = FALSE,
                         set.install.dir = set.install.dir)
         file.copy(loaderFile, codeFile, TRUE)
     }
